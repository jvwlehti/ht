package shakkiturnaus.Model.test;
// Generated by ComTest BEGIN
import java.util.Iterator;
import java.io.IOException;
import static org.junit.Assert.*;
import org.junit.*;
import shakkiturnaus.Model.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2021.05.14 10:59:05 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class OsallistujatTest {



  // Generated by ComTest BEGIN
  /** testKorvaa33 */
  @Test
  public void testKorvaa33() {    // Osallistujat: 33
    Osallistuja samu = new Osallistuja("Samu", "Sirkka", "samu@sirkat.fi", "Tushak", "044-1231213", "1900", 4); 
    Osallistujat o = new Osallistujat(); 
    o.lisaa(samu); 
    samu.setEtunimi("Sakke"); 
    o.korvaa(samu); 
    Osallistuja muokattu = o.anna(0); 
    assertEquals("From: Osallistujat line: 40", "Sakke", muokattu.getEtunimi()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaa56 */
  @Test
  public void testLisaa56() {    // Osallistujat: 56
    Osallistujat osallistujat1 = new Osallistujat(); 
    Osallistuja masa = new Osallistuja("Masa", "Mainio", "masa@mainio.fi",
    "Jyshak", "041-1212121", "1500", 0); 
    Osallistuja samu = new Osallistuja("Samu", "Sirkka", "samu@sirkat.fi",
    "Tushak", "044-1231213", "1900", 0); 
    osallistujat1.lisaa(masa); 
    osallistujat1.lisaa(samu); 
    assertEquals("From: Osallistujat line: 64", 2, osallistujat1.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testPoista81 */
  @Test
  public void testPoista81() {    // Osallistujat: 81
    Osallistuja samu = new Osallistuja("Samu", "Sirkka", "samu@sirkat.fi", "Tushak", "044-1231213", "1900", 4); 
    Osallistujat o = new Osallistujat(); 
    o.lisaa(samu); 
    o.poista(1); 
    assertEquals("From: Osallistujat line: 86", 0, o.getLkm()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnna122 */
  @Test
  public void testAnna122() {    // Osallistujat: 122
    Osallistujat osallistujat2 = new Osallistujat(); 
    Osallistuja masa = new Osallistuja("Masa", "Mainio", "masa@mainio.fi",
    "Jyshak", "041-1212121", "1500",0); 
    Osallistuja samu = new Osallistuja("Samu", "Sirkka", "samu@sirkat.fi",
    "Tushak", "044-1231213", "1900",0); 
    osallistujat2.lisaa(masa); 
    osallistujat2.lisaa(samu); 
    Osallistuja haettu = osallistujat2.anna(1); 
    assertEquals("From: Osallistujat line: 131", "2|Sirkka|Samu|Tushak|1900|samu@sirkat.fi|044-1231213|0", haettu.toString());
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaId151 */
  @Test
  public void testAnnaId151() {    // Osallistujat: 151
    Osallistuja samu = new Osallistuja("Samu", "Sirkka", "samu@sirkat.fi", "Tushak", "044-1231213", "1900", 4); 
    Osallistujat o = new Osallistujat(); 
    o.lisaa(samu); 
    assertEquals("From: Osallistujat line: 155", 11, o.annaId(0)); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testLisaaPiste169 */
  @Test
  public void testLisaaPiste169() {    // Osallistujat: 169
    Osallistuja samu = new Osallistuja("Samu", "Sirkka", "samu@sirkat.fi", "Tushak", "044-1231213", "1900", 4); 
    Osallistujat o = new Osallistujat(); 
    o.lisaa(samu); 
    o.lisaaPiste(4); 
    Osallistuja k = o.anna(0); 
    assertEquals("From: Osallistujat line: 175", 5, k.getPisteet()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testKirjoitaTied199 
   * @throws IOException when error
   * @throws PoikkeusException when error
   */
  @Test
  public void testKirjoitaTied199() throws IOException, PoikkeusException {    // Osallistujat: 199
    Osallistujat osallistujat3 = new Osallistujat(); 
    Osallistuja masa = new Osallistuja("Masa", "Mainio", "masa@mainio.fi",
    "Jyshak", "041-1212121", "1500", 0); 
    osallistujat3.lisaa(masa); 
    osallistujat3.kirjoitaTied(); 
    Osallistujat osal = new Osallistujat(); 
    osal.lueTied(); 
    assertEquals("From: Osallistujat line: 210", 1, osal.getLkm()); 
    Iterator<Osallistuja> it = osal.iterator(); 
    assertEquals("From: Osallistujat line: 212", masa.toString(), it.next().toString()); 
    assertEquals("From: Osallistujat line: 213", false, it.hasNext()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** 
   * testLueTied241 
   * @throws PoikkeusException when error
   */
  @Test
  public void testLueTied241() throws PoikkeusException {    // Osallistujat: 241
    Osallistujat osal = new Osallistujat(); 
    try {
    osal.lueTied(); 
    } catch (PoikkeusException e) {
    e.printStackTrace(); 
    }
    assertEquals("From: Osallistujat line: 250", 1, osal.getLkm()); 
  } // Generated by ComTest END
}